{"version":3,"sources":["actions/Types.js","utils/setJwtToken.js","services/api/index.js","actions/AuthActions.js","components/pages/Login.js","actions/UsersActions.js","components/pages/Register.js","actions/ProjectActions.js","components/layout/projectModal.js","components/layout/CreateProjectModal.js","components/pages/Derictor.js","reducer/AuthReducer.js","reducer/ErrorReducer.js","reducer/UsersReducer.js","reducer/MessageReducer.js","reducer/ProjectReducer.js","reducer/ProgressReducer.js","reducer/index.js","store.js","common/PrivateRoute.js","components/layout/registerModal.js","components/pages/Admin.js","components/pages/Users.js","actions/ProgreesActions.js","components/layout/CommentModal.js","actions/CommentActions.js","components/layout/PercentModal.js","components/pages/UserPanel.js","components/layout/GIPProjectModal.js","components/pages/GIPManagerProject.js","components/pages/GIPProject.js","components/pages/AllProject.js","components/pages/AdminProject.js","App.js","index.js"],"names":["GET_ERRORS","GET_TOKEN","GET_USERS","GET_MESSAGE","GET_USER","GET_PROJECTS","GET_PROJECT","GET_PROGRESS","setJWToken","token","axios","defaults","headers","common","client","create","baseURL","Accept","interceptors","request","use","config","url","localStorage","getItem","Authorization","error","Promise","reject","response","setCurrentUser","decode","type","payload","Login","state","errors","username","password","onChange","bind","onSubmit","getErrors","e","this","setState","target","name","value","preventDefault","login","props","getToken","newProps","auth","validToken","role","roleName","history","push","invalid","className","src","alt","placeholder","Component","connect","dispatch","a","post","res","data","body","jwt_decode","setItem","console","log","getUsers","get","users","editUser","user","id","Register","firstName","lastName","job","addUser","to","deleteProject","delete","getProjectusername","generateUser","Array","isArray","map","_item","label","Modal","heandleChange","selectOption","heandleChanged","projectController","projectName","projectCreat","projectFinish","edit","onChangecreat","onChangeupdate","onEditSubmit","date","dateString","project","projectCreated","projectFinished","projectManager","usersList","editProject","userListOptions","defaultValue","options","moment","isMulti","data-dismiss","onClick","UsersReducer","put","createProject","Derictor","getProjects","row","tablebody","count","projects","length","style","maxWidth","item","width","data-toggle","data-target","projectStateClear","hasOwnProperty","ProjectReducer","initialState","projectProgress","persistConfig","key","storage","whitelist","rootReducer","combineReducers","action","MessageReducer","message","ProgressReducer","persistReducer","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","component","rest","render","hiddenPassword","Admin","deleteUser","getUser","Users","getProgress","CommentModal","comment","userId","projectId","addProgress","minHeight","progress","percent","addPercent","marginLeft","UserPanel","userid","onCilick","match","params","undefined","height","userPercent","disabled","projectPercent","PercentModal","pushPercent","progresses","setInterval","getAllProject","projectStatus","jwtToken","decoded","App","exact","path","GIPprojectManager","GIPproject","AllProject","AdminProject","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06eab9cc.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const GET_PROGRESS = \"GET_PROGRESS\";","import axios from \"axios\";\r\n\r\nconst setJWToken = (token) => {\r\n    if (token) {\r\n    // Apply to every request\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }\r\n};\r\nexport default setJWToken;\r\n","import axios from \"axios\";\r\n\r\nconst client = axios.create({\r\n  baseURL: \"https://architecture-manager-web.herokuapp.com\",\r\n  headers: {\r\n    Accept: \"*/*\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nclient.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url !== \"/uz/cas/login\") {\r\n      const token = localStorage.getItem(\"jwtToken\");\r\n      config.headers.Authorization = `${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nclient.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default client;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, GET_TOKEN } from \"../actions/Types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"../utils/setJwtToken\";\r\nimport client from 'services/api';\r\n\r\nexport const getToken = (login) => async (dispatch) => { \r\n    try {\r\n        const res = await client.post(\r\n            \"/uz/cas/login\",\r\n            login \r\n        ); \r\n        const token = await res.data.body; \r\n        setJWToken(token);\r\n        const decode = await jwt_decode(token);\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        dispatch(setCurrentUser(decode));\r\n    } catch (errors) {\r\n    console.log(errors);\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors.data,\r\n    });\r\n    }\r\n};\r\n\r\nexport const setCurrentUser = (decode) => {\r\n    return {\r\n        type: GET_TOKEN,\r\n        payload: decode,\r\n    };\r\n};\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header from future request\r\n    setJWToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {getToken} from '../../actions/AuthActions';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {},\r\n            username: \"\",\r\n            password: \"\",\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.getErrors = this.getErrors.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmit(e) { \r\n        e.preventDefault();\r\n        const login = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        };\r\n        this.props.getToken(login);\r\n    }\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.auth.validToken) {\r\n            switch(newProps.auth.token.role[0].roleName){\r\n                case \"admin\" :  newProps.history.push(\"/derictor\");   break;\r\n                case \"gip\" :  newProps.history.push(\"/gipProject\"); break;\r\n                case \"user\" :  newProps.history.push(\"/users\"); break;\r\n                default : newProps.history.push(\"/\")\r\n            }\r\n        }\r\n        if (newProps.errors) {\r\n        this.setState({ errors: newProps.errors.errors });\r\n        }\r\n    }\r\n\r\n\r\n    getErrors(errors) {\r\n        if (errors) {\r\n            if (errors.invalid)\r\n                return (\r\n                <div className=\"pb-3 pt-3\">\r\n                    <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n                    {errors.invalid}\r\n                    </div>\r\n                </div>\r\n                );\r\n            if (errors.username) {\r\n                return (\r\n                <div className=\"pb-3 pt-3\">\r\n                    <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n                    {errors.username}\r\n                    </div>\r\n                </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <img className=\"bacgimg\" src=\"./images/bacgimg.jpg\" alt=\"qurilish\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 offset-4 login\">\r\n                        {/* {this.getErrors(errors)} */}\r\n                        <form className=\"m-5 login-form\" onSubmit={this.onSubmit}>\r\n                            <div className=\"row\">\r\n                                <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"username\" type=\"text\" placeholder=\"Login\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"password\" type=\"password\" placeholder=\"password\"  onChange={this.onChange}/>\r\n                            </div>\r\n                            <button className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\">Kirish</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    getToken: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n    errors: state.errors,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToPorps, {getToken}) (Login)","\r\nimport { GET_ERRORS, GET_USER, GET_USERS, GET_MESSAGE } from \"../actions/Types\";\r\nimport client from 'services/api';\r\nexport const getUsers = () => async dispatch =>{\r\n    try{\r\n        const users = await client.get(\"/uz/cas/user\"); \r\n        dispatch({\r\n            type : GET_USERS,\r\n            payload : users.data.body\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data,\r\n        });\r\n    }\r\n}\r\nexport const getUsermap = () => async dispatch =>{\r\n    try{ \r\n        const users = await client.get(\"/uz/cas/user/map\"); \r\n        dispatch({\r\n            type : GET_USERS,\r\n            payload : users.data.body\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data,\r\n        });\r\n    }\r\n}\r\nexport const addUser = (user, history) => async dispatch =>{ console.log(user)\r\n    try{\r\n        const res = await client.post(\"/uz/cas/user\", user);\r\n        dispatch({\r\n            type: GET_MESSAGE,\r\n            payload: res.data.body,\r\n        });\r\n        history.push(\"/admin\");\r\n    }catch(error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.data\r\n        }); \r\n    }\r\n};\r\n\r\nexport const editUser = (user, history, id) => async dispatch =>{ console.log(user, id)\r\n    try{\r\n        const res = await client.post(`/uz/cas/user/${id}`, user);\r\n        dispatch({\r\n            type: GET_MESSAGE,\r\n            payload: res.data.body,\r\n        });\r\n        history.push(\"/admin\");\r\n    }catch(error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await client.delete(`/uz/cas/user/${id}`);\r\n        dispatch({\r\n            type : GET_MESSAGE,\r\n            payload : res.data\r\n        });\r\n        history.push(\"/admin\")\r\n    }catch(error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUser = (id) => async dispatch => {\r\n    try{\r\n        const res = await client.get(`/uz/cas/user/${id}`);\r\n        dispatch({\r\n            type : GET_USER,\r\n            payload : res.data.body\r\n        });\r\n    }catch(error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.data,\r\n        });\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { addUser} from '../../actions/UsersActions';\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            firstName : '',\r\n            lastName : '',\r\n            job : '',\r\n            username : '',\r\n            password : ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    \r\n    onSubmit(e) { \r\n        e.preventDefault();\r\n        const user = {\r\n        firstName: this.state.firstName,\r\n        lastName : this.state.lastName,\r\n        job : this.state.job,\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n        };\r\n        this.props.addUser(user, this.props.history);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <img className=\"bacgimg\" src=\"./images/bacgimg.jpg\" alt=\"qurilish\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 offset-4 register\">\r\n                        <Link to=\"/admin\"><img src=\"../images/backspace-solid.svg\" className=\"backspace\" alt=\"ortga qaytish\" /></Link>\r\n                        <form className=\"m-5 register-form\" onSubmit={this.onSubmit}>\r\n                            <div className=\"row\">\r\n                                <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"firstName\" type=\"text\" onChange={this.onChange} placeholder=\"Ismingiz\" />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"lastName\" type=\"text\" onChange={this.onChange}  placeholder=\"Familiyangiz\" />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"job\" type=\"text\" onChange={this.onChange}  placeholder=\"Lavozimingiz\" />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"username\" type=\"text\" onChange={this.onChange}  placeholder=\"Login\" />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <input name=\"password\" type=\"password\" onChange={this.onChange}  placeholder=\"password\" />\r\n                            </div>\r\n                            <button className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\" type=\"submit\">Ro'yhatdan o'tqazish</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nRegister.propTypes = {\r\n    addUser : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addUser}) (Register)","import axios from 'axios';\r\nimport { GET_ERRORS, GET_MESSAGE, GET_PROJECTS } from './Types';\r\nimport client from 'services/api';\r\nexport const getProjects = () => async dispatch =>{\r\n    try{\r\n        const res = await client.get(\"/uz/cas/project/all\");\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const createProject = (project) => async dispatch =>{\r\n    try{\r\n        const res = await axios.post(\"https://architecture-manager-web.herokuapp.com/uz/cas/project\", project); console.log(res)\r\n        dispatch({\r\n            type: GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\nexport const deleteProject = (id) => async dispatch =>{\r\n    try{\r\n        const res = await axios.delete(`https://architecture-manager-web.herokuapp.com/uz/cas/project/${id}`); console.log(res)\r\n        dispatch({\r\n            type: GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const editProject = (id, project) => async dispatch =>{ console.log(id, project)\r\n    try{\r\n        const res = await axios.put(`https://architecture-manager-web.herokuapp.com/uz/cas/project/${id}`, project); \r\n        dispatch({\r\n            type: GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\nexport const getProjectusername = (username) => async dispatch =>{ \r\n    try{\r\n        const res = await axios.post(`https://architecture-manager-web.herokuapp.com/uz/cas/project/user`, {\"username\" : username}); \r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const getAllProject = () => async dispatch =>{ \r\n    try{\r\n        const res = await axios.get(`https://architecture-manager-web.herokuapp.com/uz/cas/project/all`); \r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload : res.data.body\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { getUsers } from \"../../actions/UsersActions\";\r\nimport { DatePicker } from \"antd\";\r\nimport {\r\n    deleteProject,\r\n    editProject,\r\n} from \"../../actions/ProjectActions\";\r\n\r\nfunction generateUser(users) {\r\n    users = Array.isArray(users) ? users : [];\r\n    const options = users.map((_item) => {\r\n        return {\r\n            label: `${_item.firstName} ${_item.lastName}`,\r\n            value: _item.id,\r\n        };\r\n    });\r\n\r\n    return options;\r\n}\r\nfunction generateUserId(selectOption) {\r\n    const options = selectOption.map((_item) => {\r\n        return _item.value;\r\n    });\r\n\r\n    return options;\r\n}\r\n\r\nexport class Modal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: null,\r\n            selectOption: null,\r\n            projectController: null,\r\n            projectName: \"\",\r\n            projectCreat: \"\",\r\n            projectFinish: \"\",\r\n            users: [],\r\n            edit: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangecreat = this.onChangecreat.bind(this);\r\n        this.onChangeupdate = this.onChangeupdate.bind(this);\r\n        this.onEditSubmit = this.onEditSubmit.bind(this);\r\n    }\r\n    heandleChange = (selectOption) => {\r\n        this.setState({ selectOption });\r\n    };\r\n    heandleChanged = (projectController) => {\r\n        this.setState({ projectController });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onChangecreat(date, dateString) {\r\n        this.setState({\r\n            projectCreat: dateString,\r\n        });\r\n    }\r\n    onChangeupdate(date, dateString) {\r\n        this.setState({\r\n            projectFinish: dateString,\r\n        });\r\n    }\r\n\r\n    onEditSubmit(e) {\r\n        e.preventDefault();\r\n        const project = {\r\n            projectName: this.state.projectName,\r\n            projectCreated: this.state.projectCreat,\r\n            projectFinished: this.state.projectFinish,\r\n            projectManager: this.state.projectController.value,\r\n            usersList: generateUserId(this.state.selectOption),\r\n        };\r\n        this.props.editProject(this.state.id, project);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            id: newProps.project.id,\r\n            projectName: newProps.project.projectName,\r\n            projectCreat: newProps.project.projectCreated,\r\n            projectFinish: newProps.project.projectFinished,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.project);\r\n\r\n        const { project } = this.props;\r\n\r\n        const userListOptions = generateUser(project.usersList);\r\n        return (\r\n            <div className=\"modal\" id=\"editProjectModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"create-project\">\r\n                            <div className=\"row m-5\">\r\n                                <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                            </div>\r\n                            <form className=\"m-5 w-100\">\r\n                                <div className=\"row w-100\">\r\n                                    <input\r\n                                        className=\"projectName\"\r\n                                        name=\"projectName\"\r\n                                        type=\"text\"\r\n                                        onChange={this.onChange}\r\n                                        placeholder=\"Project Name\"\r\n                                        defaultValue={this.state.projectName}\r\n                                    />\r\n                                </div>\r\n                                <Select\r\n                                    className=\"w-100\"\r\n                                    onChange={this.heandleChanged}\r\n                                    defaultValue={[\r\n                                        {\r\n                                            label : `${project.projectManager.firstName } ${project.projectManager.lastName}`,\r\n                                            value : project.projectManager.id\r\n                                        }\r\n                                    ]}\r\n                                    options={generateUser(this.props.users)}\r\n                                />\r\n                                <DatePicker\r\n                                    className=\" w-100\"\r\n                                    name=\"projectCreat\"\r\n                                    value={moment(this.state.projectCreat, 'YYYY-MM-DD')}\r\n                                    onChange={this.onChangecreat}\r\n                                    placeholder=\"Created project\"\r\n                                />\r\n                                <DatePicker\r\n                                    className=\"w-100 mb-3\"\r\n                                    name=\"projectFinish\"\r\n                                    value={moment(this.state.projectFinish, 'YYYY-MM-DD')}\r\n                                    onChange={this.onChangeupdate}\r\n                                    placeholder=\"Finished project\"\r\n                                />\r\n                                <Select\r\n                                    className=\"mb-3 w-100\"\r\n                                    isMulti\r\n                                    onChange={this.heandleChange}\r\n                                    options={generateUser(this.props.users)}\r\n                                    defaultValue={userListOptions}\r\n                                />\r\n                                \r\n                                    <button\r\n                                        className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\"\r\n                                        type=\"button\"\r\n                                        data-dismiss=\"modal\"\r\n                                        onClick={this.onEditSubmit}\r\n                                    >\r\n                                        O'zgartirish\r\n                                    </button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    getUsers: PropTypes.func.isRequired,\r\n    editProject: PropTypes.func.isRequired,\r\n    deleteProject: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n    users: state.UsersReducer.users,\r\n});\r\n\r\nexport default connect(mapStateToPorps, {\r\n    getUsers,\r\n    deleteProject,\r\n    editProject,\r\n})(Modal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { getUsers } from \"../../actions/UsersActions\";\r\nimport { DatePicker } from \"antd\";\r\nimport {\r\n    createProject,\r\n    deleteProject,\r\n} from \"../../actions/ProjectActions\";\r\n\r\nfunction generateUser(users) {\r\n    users = Array.isArray(users) ? users : [];\r\n    const options = users.map((_item) => {\r\n        return {\r\n            label: `${_item.firstName} ${_item.lastName}`,\r\n            value: _item.id,\r\n        };\r\n    });\r\n\r\n    return options;\r\n}\r\nfunction generateUserId(selectOption) {\r\n    const options = selectOption.map((_item) => {\r\n        return _item.value;\r\n    });\r\n\r\n    return options;\r\n}\r\n\r\nexport class Modal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: null,\r\n            selectOption: null,\r\n            projectController: null,\r\n            projectName: \"\",\r\n            projectCreat: \"\",\r\n            projectFinish: \"\",\r\n            users: [],\r\n            edit: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangecreat = this.onChangecreat.bind(this);\r\n        this.onChangeupdate = this.onChangeupdate.bind(this);\r\n    }\r\n    heandleChange = (selectOption) => {\r\n        this.setState({ selectOption });\r\n    };\r\n    heandleChanged = (projectController) => {\r\n        this.setState({ projectController });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onChangecreat(date, dateString) {\r\n        this.setState({\r\n            projectCreat: dateString,\r\n        });\r\n    }\r\n    onChangeupdate(date, dateString) {\r\n        this.setState({\r\n            projectFinish: dateString,\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const project = {\r\n            projectName: this.state.projectName,\r\n            projectCreated: this.state.projectCreat,\r\n            projectFinished: this.state.projectFinish,\r\n            projectManager: this.state.projectController.value,\r\n            usersList: generateUserId(this.state.selectOption),\r\n        };\r\n        this.props.createProject(project);\r\n    }\r\n\r\n    render() {\r\n\r\n        const users = this.props.users;\r\n        console.log(users);\r\n        return (\r\n            <div className=\"modal\" id=\"creatProjectModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"create-project\">\r\n                            <div className=\"row m-5\">\r\n                                <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                            </div>\r\n                            <form className=\"m-5 w-100\">\r\n                                <div className=\"row w-100\">\r\n                                    <input\r\n                                        className=\"projectName\"\r\n                                        name=\"projectName\"\r\n                                        type=\"text\"\r\n                                        onChange={this.onChange}\r\n                                        placeholder=\"Project Name\"\r\n                                    />\r\n                                </div>\r\n                                <Select\r\n                                    className=\"w-100\"\r\n                                    onChange={this.heandleChanged}\r\n                                    options={generateUser(users)}\r\n                                />\r\n                                <DatePicker\r\n                                    className=\" w-100\"\r\n                                    name=\"projectCreat\"\r\n                                    onChange={this.onChangecreat}\r\n                                    placeholder=\"Created project\"\r\n                                />\r\n                                <DatePicker\r\n                                    className=\"w-100 mb-3\"\r\n                                    name=\"projectFinish\"\r\n                                    onChange={this.onChangeupdate}\r\n                                    placeholder=\"Finished project\"\r\n                                />\r\n                                <Select\r\n                                    className=\"mb-3 w-100\"\r\n                                    isMulti\r\n                                    onChange={this.heandleChange}\r\n                                    options={generateUser(users)}\r\n                                />\r\n                                    <button\r\n                                        className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\"\r\n                                        type=\"button\"\r\n                                        data-dismiss=\"modal\"\r\n                                        onClick={this.onSubmit}\r\n                                    >\r\n                                        Ro'yhatdan o'tqazish\r\n                                    </button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    getUsers: PropTypes.func.isRequired,\r\n    deleteProject: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n    users: state.UsersReducer.users,\r\n});\r\n\r\nexport default connect(mapStateToPorps, {\r\n    createProject,\r\n    getUsers,\r\n    deleteProject,\r\n})(Modal);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProjects, deleteProject} from '../../actions/ProjectActions'\r\nimport ProjectModal from '../layout/projectModal'\r\nimport {Link} from 'react-router-dom'\r\nimport CreatProjectModal from '../layout/CreateProjectModal'\r\n\r\n\r\n\r\nclass Derictor extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            project : {}\r\n        }\r\n        this.deleteProject = this.deleteProject.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'admin'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        this.props.getProjects();}\r\n    }\r\n\r\n    onClick(row){\r\n        this.setState({\r\n            project : row\r\n        })\r\n    }\r\n\r\n    deleteProject(id){\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    projectStateClear(){\r\n        this.setState({\r\n            project :{}\r\n        })\r\n    }\r\n    render() {\r\n\r\n        let count = 0;\r\n        let tablebody;\r\n        console.log(this.props.projects)\r\n        if(this.props.projects.length > 0){\r\n            tablebody = this.props.projects.map((row) => { count = count + 1\r\n                return (\r\n                    <tr key={row.id}>\r\n                        <td>{count}</td>\r\n                        <td>{row.projectManager.firstName} {row.projectManager.lastName}</td>\r\n                        <td>{row.projectName}</td>\r\n                        <td style={{maxWidth:\"300px\"}}>{row.usersList.map(item =>{\r\n                            return(<p className=\"m-0 p-0\" key={item.id}>{item.firstName} {item.lastName}</p>)\r\n                        })}</td>\r\n                        <td style={{width:\"150px\"}}><p>{row.projectCreated}</p> <p>{row.projectFinished}</p></td>\r\n                        <td>\r\n                            <button className=\"btn btn-danger p-1 pl-3 mr-3 pr-3 text-light\" onClick={() => this.deleteProject(row.id)}>Delete \r\n                            <span className=\"fas fa-trash ml-3\"></span></button>\r\n                            <button type=\"button\" className=\"btn btn-warning p-1 pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#editProjectModal\"  \r\n                            onClick={() => this.onClick(row)}>Edit <span className=\"fas fa-edit ml-2\"></span></button>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row derictor-navbar\">\r\n                    <nav className=\"navbar navbar-expand-md p-3\">\r\n                        <div className=\"navbar-brand ml-4\" >Derictor F.I.O oynasi</div>\r\n                        <Link className=\"ml-5 pl-5 pr-5 btn btn-light\" to=\"/admin\">ADMIN</Link>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"ml-5 pl-5 pr-5 btn btn-light\" to=\"/allProject\">Loyihalarga o'tish</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-light ml-5\" type=\"button\" data-toggle=\"modal\" data-target=\"#creatProjectModal\"\r\n                                    onClick={() => this.projectStateClear()}>Yangi loyiha qo'shish \r\n                                    <img src=\"../images/plus-circle-solid.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>N<sup className=\"mb-1 pt-1\">o</sup><i className=\"tartib-raqam\">-</i></th>\r\n                            <th>Loyiha rahbari</th>\r\n                            <th>Loyiha nomi</th>\r\n                            <th >Bajaruvchilar</th>\r\n                            <th>Loyiha vaqti</th>\r\n                            <th>O'zgarishlar</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tablebody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    this.state.project && this.state.project.hasOwnProperty('id') && <ProjectModal project={this.state.project}/>\r\n                }\r\n                <CreatProjectModal />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDerictor.propTypes ={\r\n    getProjects : PropTypes.func.isRequired,\r\n    deleteProject : PropTypes.func.isRequired,\r\n    projects : PropTypes.array.isRequired\r\n\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    projects : state.ProjectReducer.projects,\r\n    token : state.auth.token\r\n});\r\n\r\n\r\nexport default connect(mapStateToPorps, {getProjects, deleteProject}) (Derictor)\r\n","import { GET_TOKEN } from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n    token: {},\r\n    validToken: false,\r\n    };\r\n    export default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_TOKEN:\r\n        return {\r\n            ...state,\r\n            token: action.payload,\r\n            validToken: action.payload ? true : false,\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/Types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_USER, GET_USERS } from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    user : {}\r\n    };\r\n    export default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n        return {\r\n            ...state,\r\n            users: action.payload\r\n        };\r\n        case GET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n","import { GET_MESSAGE } from \"../actions/Types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT} from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project : {}\r\n    };\r\n    export default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n        return {\r\n            ...state,\r\n            projects: action.payload\r\n        };\r\n        case GET_PROJECT:\r\n        return {\r\n            ...state,\r\n            project: action.payload\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}","import {  GET_PROGRESS} from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n    projectProgress: {},\r\n};\r\n    export default function foo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROGRESS:\r\n        return {\r\n            ...state,\r\n            projectProgress : action.payload\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport AuthReducer from './AuthReducer';\r\nimport ErrorReducer from \"./ErrorReducer\";\r\nimport UsersReducer from './UsersReducer';\r\nimport MessageReducer from './MessageReducer';\r\nimport ProjectReducer from './ProjectReducer';\r\nimport ProgressReducer from './ProgressReducer';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\n    whitelist : ['auth']\r\n}\r\n\r\nconst rootReducer = combineReducers({ \r\n    auth: AuthReducer,\r\n    errors : ErrorReducer,\r\n    UsersReducer,\r\n    MessageReducer,\r\n    ProjectReducer,\r\n    ProgressReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducer\";\r\n// import {persistStore} from 'redux-persist';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n\r\nlet store\r\n\r\nstore = createStore(\r\n        rootReducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware))\r\n    );\r\n\r\n\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n        auth.validToken === true ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/\" />\r\n        )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {editUser} from '../../actions/UsersActions';\r\n\r\n\r\nexport class Modal extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            id : '',\r\n            firstName : '',\r\n            lastName : '',\r\n            job : '',\r\n            username : '',\r\n            password : ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){ console.log(newProps)\r\n        this.setState({\r\n            id : newProps.user.id,\r\n            firstName: newProps.user.firstName,\r\n            lastName: newProps.user.lastName,\r\n            job: newProps.user.job,\r\n            username: newProps.user.username,\r\n            password: newProps.user.hiddenPassword\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    \r\n    onSubmit(e) { \r\n        e.preventDefault();\r\n        const user = {\r\n        firstName: this.state.firstName,\r\n        lastName : this.state.lastName,\r\n        job : this.state.job,\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n        };\r\n        this.props.editUser(user, this.props.history, this.state.id);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"modal\" id=\"userModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">     \r\n                        <div className=\"modal-body\">\r\n                            <form className=\"m-5 register-form\">\r\n                                <div className=\"row\">\r\n                                    <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"firstName\" type=\"text\" onChange={this.onChange} placeholder=\"Ismingiz\" \r\n                                    defaultValue={this.state.firstName}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"lastName\" type=\"text\" onChange={this.onChange}  placeholder=\"Familiyangiz\" \r\n                                    defaultValue={this.state.lastName}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"job\" type=\"text\" onChange={this.onChange}  placeholder=\"Lavozimingiz\" \r\n                                    defaultValue={this.state.job}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"username\" type=\"text\" onChange={this.onChange}  placeholder=\"Login\" \r\n                                    defaultValue={this.state.username}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"password\" type=\"password\" onChange={this.onChange}  placeholder=\"password\" \r\n                                    defaultValue={this.state.password}/>\r\n                                </div>\r\n                                <button className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\" type=\"button\" data-dismiss=\"modal\"  onClick={this.onSubmit}>Ro'yhatdan o'tqazish</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nModal.propTypes = {\r\n    editUser : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {editUser}) (Modal)\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, deleteUser, getUser, editUser} from '../../actions/UsersActions';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../layout/registerModal';\r\n\r\nexport class Admin extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            user: {\r\n                id : '',\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                job: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n        };\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.token.role[0].roleName)\r\n        if(this.props.token.role[0].roleName !== 'admin'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        this.props.getUsers();}\r\n    }\r\n    \r\n    deleteUser(id){\r\n        console.log(id);\r\n        this.props.deleteUser(id, this.props.history);\r\n    }\r\n    \r\n    onClick(row){\r\n        this.setState({\r\n            user : row\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        \r\n        if(this.props.users.length > 0){\r\n            tablebody = this.props.users.map((row) => { count = count + 1\r\n                return (\r\n                    <tr key={row.id}>\r\n                        <td>{count}</td>\r\n                        <td>{row.firstName}</td>\r\n                        <td>{row.lastName}</td>\r\n                        <td>{row.job}</td>\r\n                        <td>{row.username}</td>\r\n                        <td>{row.hiddenPassword}</td>\r\n                        <td>\r\n                            <button className=\"btn btn-danger p-1 pl-3 mr-3 pr-3 text-light\" onClick={() => this.deleteUser(row.id)}>Delete \r\n                            <img src=\"../images/user-times-solid.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button>\r\n                            <button type=\"button\" className=\"btn btn-warning p-1 pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#userModal\"  \r\n                            onClick={() => this.onClick(row)}>Edit <img src=\"../images/edit-regular.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className=\"container-fuild\">\r\n                <div className=\"row derictor-navbar\">\r\n                <nav className=\"navbar navbar-expand-md p-3\">\r\n                    <p className=\"text-light ml-5 mt-2\" >\r\n                        <Link to=\"/derictor\" className=\"bg-light pl-3 pr-3 p-2 mr-5 ortga\"><img src=\"../images/sign-in.png\" className=\"back-icon\" alt=\"ortga qaytish\" /> ortga</Link>\r\n                    ADMIN\r\n                    </p>\r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/register\">\r\n                            <button className=\"btn btn-light\">\r\n                                Ro'hatdan o'tkazish <img src=\"../images/plus-circle-solid.svg\" className=\"back-icon\" alt=\"ortga qaytish\" />\r\n                            </button>\r\n                        </Link>\r\n                    </li>\r\n                    </ul>\r\n                </nav>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>N<sup className=\"mb-1 pt-1\">o</sup><i className=\"tartib-raqam\">-</i></th>\r\n                            <th>Ism</th>\r\n                            <th>Familiya</th>\r\n                            <th>Lavozim</th>\r\n                            <th>Login</th>\r\n                            <th>Parol</th>\r\n                            <th>O'zgarishlar</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {tablebody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <Modal user={this.state.user} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAdmin.propTypes = {\r\n    getUsers : PropTypes.func.isRequired,\r\n    users : PropTypes.array.isRequired,\r\n    user : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    users : state.UsersReducer.users,\r\n    user : state.UsersReducer.user,\r\n    token : state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToPorps, {getUsers, deleteUser, getUser, editUser}) (Admin)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {getProjectusername} from '../../actions/ProjectActions'\r\n\r\nexport class Users extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'user'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        this.props.getProjectusername(this.props.token.username)}\r\n    }\r\n\r\n    onClick(id){\r\n        this.props.history.push(`/project/${id}`)\r\n    }\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const projects = this.props.projects;\r\n        if(projects !== {}){\r\n            tablebody =Array.isArray(projects)?projects.map((row) => { count = count + 1\r\n                return (\r\n                    <Link to={`/project/${row.id}`} className=\"row project-link\" key={row.id}>\r\n                        <div className=\"col\">{count}</div>\r\n                        <div className=\"col\">{row.projectName}</div>\r\n                        <div className=\"col\">{row.projectCreated}</div>\r\n                        <div className=\"col\">{row.projectFinished}</div>\r\n                    </Link>\r\n                );\r\n            }):''\r\n        }\r\n        \r\n        return ( \r\n            \r\n\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <h3 className=\"text-light\">Projects </h3>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row bg-light p-4\">\r\n                    <div className=\"col\">\r\n                        {tablebody}\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    token : PropTypes.object.isRequired,\r\n    projects : PropTypes.array.isRequired,\r\n    getProjectusername : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    token : state.auth.token,\r\n    projects : state.ProjectReducer.projects\r\n})\r\nexport default connect(mapStateToPorps, { getProjectusername})  (Users)\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_MESSAGE, GET_PROGRESS} from './Types'\r\nimport client from 'services/api';\r\nexport const getProgress = (project) => async dispatch =>{ console.log( project)\r\n    try{\r\n        const res = await client.post('/uz/cas/progress/getPercent', project);\r\n        console.log(res);\r\n        dispatch({\r\n            type : GET_PROGRESS,\r\n            payload : res.data.body\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }   \r\n}; \r\nexport const addPercent = (percent) => async dispatch =>{ console.log(percent)\r\n    try{\r\n        const res = await axios.post(`https://architecture-manager-web.herokuapp.com/uz/cas/progress`, percent);\r\n        console.log(res);\r\n        dispatch({\r\n            type : GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }   \r\n}; \r\nexport const pushPercent = (id) => async dispatch =>{ console.log(id)\r\n    try{\r\n        const res = await axios.get(`https://architecture-manager-web.herokuapp.com/uz/cas/progress/add/${id}`);\r\n        console.log(res);\r\n        dispatch({\r\n            type : GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }   \r\n}; \r\n","import React, { Component } from 'react'\r\nimport {addProgress} from '../../actions/CommentActions'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\nexport class CommentModal extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            comment : \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    onChange(e){\r\n        console.log(e.target.name)\r\n        this.setState({ [e.target.name] : e.target.value});\r\n        \r\n    }\r\n\r\n    onSubmit(){\r\n        console.log(this.props.userId, this.props.projectId);\r\n        const comment = {\r\n            comment : this.state.comment,\r\n            projectId : this.props.projectId,\r\n            userId : this.props.userId\r\n        }\r\n        this.props.addProgress(comment)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"commentModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">     \r\n                        <div className=\"modal-body\">\r\n                            <form className=\"m-5 register-form text-center\">\r\n                                <div className=\"row\">\r\n                                    <h4 className=\"loyiha-boshqaruvi\">Loyihalar Boshqaruvi</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <textarea name=\"comment\" type=\"text\" onChange={this.onChange} placeholder=\"Commentariya\" \r\n                                    className=\"w-100 m-5\" style={{minHeight:\"150px\"}}/>\r\n                                </div>\r\n                                <button className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\" type=\"button\" data-dismiss=\"modal\"  onClick={this.onSubmit}>Ro'yhatdan o'tqazish</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCommentModal.propTypes = {\r\n    addProgress : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addProgress}) (CommentModal)\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_MESSAGE} from './Types'\r\nimport client from 'services/api';\r\n\r\nexport const addProgress = (progress) => async dispatch =>{ console.log( progress)\r\n    try{\r\n        const res = await client.post(`/uz/cas/comment`, progress);\r\n        console.log(res);\r\n        dispatch({ \r\n            type : GET_MESSAGE,\r\n            payload : res.data.body\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }   \r\n}; ","import React, { Component } from 'react'\r\nimport {addPercent} from '../../actions/ProgreesActions'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\nexport class CommentModal extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            percent : \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    onChange(e){\r\n        console.log(e.target.value)\r\n        this.setState({ [e.target.name] : e.target.value});\r\n        \r\n    }\r\n\r\n    onSubmit(){\r\n        console.log(this.props.percent);\r\n        const percent = {\r\n            percent : this.state.percent,\r\n            projectId : this.props.projectId,\r\n            userId : this.props.userId\r\n        }\r\n        this.props.addPercent(percent)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"percentModal\">\r\n                <div className=\"modal-dialog w-50\">\r\n                    <div className=\"modal-content\">     \r\n                        <div className=\"modal-body\">\r\n                            <form className=\"m-5 register-form text-center\">\r\n                                <div className=\"row\">\r\n                                    <h4 className=\"loyiha-boshqaruvi\" style={{marginLeft:'200px'}}>Loyihalar Boshqaruvi</h4>\r\n                                </div>\r\n                                <div className=\"row text-center\" style={{marginLeft:'200px'}}>\r\n                                    <input name=\"percent\" type=\"number\" onChange={this.onChange} placeholder=\"Commentariya\" \r\n                                    className=\"w-50\"/>\r\n                                </div>\r\n                                <button className=\"btn btn-success pl-5 pr-5 pt-2 pb-2\" type=\"button\" data-dismiss=\"modal\"  onClick={this.onSubmit}>Ro'yhatdan o'tqazish</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCommentModal.propTypes = {\r\n    addPercent : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addPercent}) (CommentModal)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProgress} from '../../actions/ProgreesActions'\r\nimport CommentModal from '../layout/CommentModal'\r\nimport PercentModal from '../layout/PercentModal'\r\n\r\nexport class UserPanel extends Component {\r\n    constructor() {\r\n        super();  \r\n        this.state = {\r\n            userid : ''\r\n        }\r\n        this.onCilick = this.onCilick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'user'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        const id = this.props.match.params.id;\r\n        console.log(id);\r\n        const percent = {\r\n            projectId : id\r\n        }\r\n        this.props.getProgress(percent)}\r\n    }\r\n\r\n    onCilick(id){\r\n        this.setState({userid : id})\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const project = this.props.project;\r\n        if(project.usersList !== undefined){\r\n            tablebody =Array.isArray(project.usersList)?project.usersList.map((row) => { count = count + 1\r\n                return (\r\n                    <tr key={row.id}>\r\n                        <td>{count}</td>\r\n                        <td>{row.name}</td>\r\n                        <td>\r\n                            {row.comment !== undefined ? \r\n                            <p className=\"user-comment\">\r\n                            {row.comment}\r\n                            </p>\r\n                            :\r\n                            <div>Commentariya yo`q</div>\r\n                            }\r\n                            \r\n                        </td>\r\n                        <td>{project.projectCreated}</td>\r\n                        <td>{project.projectFinished}</td>\r\n                        <td style={{maxWidth:'100px'}}>\r\n                            <div className=\"progress\" style={{height:'14px'}}>\r\n                                <div className=\"progress-bar bg-success\" style={{width:`${row.userPercent}%`}}>\r\n                                {row.userPercent}%</div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {row.username === this.props.token.username ?\r\n                                <button className=\"btn btn-danger mr-5 pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#commentModal\"\r\n                                onClick = {() => this.onCilick(row.id)}>Izoh \r\n                                <img src=\"../images/edit-regular.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button> \r\n                                    : \r\n                                <button className=\"btn btn-danger mr-5 pl-3 pr-3 text-light\" disabled>Izoh \r\n                                <span className=\"fas fa-edit \"></span></button>\r\n                            }\r\n                            {row.username === this.props.token.username ?\r\n                                <button type=\"button\" className=\"btn btn-warning  pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#percentModal\"  \r\n                                onClick={() => this.onCilick(row.id)}\r\n                                >Foiz qo'shish <img src=\"../images/plus-circle-solid.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button>\r\n                                    :\r\n                                <button type=\"button\" className=\"btn btn-warning  pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#userModal\"  \r\n                                disabled>Foiz qo'shish <img src=\"../images/plus-circle-solid.svg\" className=\"icon\" alt=\"ortga qaytish\" /></button>\r\n                            }\r\n\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }):''\r\n        }\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <p className=\"text-light\">Loyiha nomi : {this.props.project.projectName}</p>\r\n                        <div className=\"progress\" style={{height:'24px'}}>\r\n                            <div className=\"progress-bar bg-warning\" style={{width:`${this.props.project.projectPercent}%`}}>\r\n                            {this.props.project.projectPercent}%</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>N<sup className=\"mb-1 pt-1\">o</sup><i className=\"tartib-raqam\">-</i></th>\r\n                            <th>Bajaruvchilar</th>\r\n                            <th>Izohlar</th>\r\n                            <th >Boshlanish vaqti</th>\r\n                            <th>Tugash vaqti</th>\r\n                            <th>Progrees bar </th>\r\n                            <th>O'zgarishlar</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tablebody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>     \r\n                    <CommentModal projectId={project.id} userId={this.state.userid}/>\r\n                    <PercentModal projectId={project.id} userId={this.state.userid}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserPanel.propTypes = {\r\n    getProgress : PropTypes.func.isRequired,\r\n    project : PropTypes.object.isRequired,\r\n    token : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    project : state.ProgressReducer.projectProgress,\r\n    token : state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToPorps, { getProgress}) (UserPanel)","import React, { Component } from 'react'\r\nimport {pushPercent} from '../../actions/ProgreesActions'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\nexport class CommentModal extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            percent : \"\"\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(id){\r\n        this.props.pushPercent(id)\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        console.log(user.progresses)\r\n        let row;\r\n        if(user.progresses !== undefined){ console.log(user.progresses)\r\n            row = user.progresses.map(item =>{\r\n                return(\r\n                    <form className=\"m-5 register-form text-center\" key={item.id}>\r\n                        <div className=\"row\">\r\n                            <h4 className=\"loyiha-boshqaruvi\" style={{marginLeft:'200px'}}>Loyihalar Boshqaruvi</h4>\r\n                        </div>\r\n                        <div className=\"row text-center\" style={{marginLeft:'200px'}}>\r\n                            <span>{item.percent}</span>\r\n                        </div>\r\n                        <button className=\"btn btn-success pt-2 pb-2\" type=\"button\" data-dismiss=\"modal\"  onClick={() => this.onSubmit(item.id)}>Tasdiqlash</button>\r\n                    </form>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"modal\" id=\"gipProjectModal\">\r\n                <div className=\"modal-dialog w-50\">\r\n                    <div className=\"modal-content\">     \r\n                        <div className=\"modal-body\">\r\n                            {row}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCommentModal.propTypes = {\r\n    pushPercent : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {pushPercent}) (CommentModal)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProgress} from '../../actions/ProgreesActions'\r\nimport GipProjectModal from '../layout/GIPProjectModal'\r\n\r\nexport class UserPanel extends Component {\r\n    constructor() {\r\n        super();  \r\n        this.state = {\r\n            user : {}\r\n        }\r\n        this.onCilick = this.onCilick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id;\r\n        setInterval(() =>{\r\n            const percent = {\r\n                projectId : id\r\n            }\r\n            this.props.getProgress(percent)\r\n        }, 4000)\r\n        \r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.token.role[0].roleName !== 'gip'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        const id = this.props.match.params.id;\r\n        const percent = {\r\n            projectId : id\r\n        }\r\n        this.props.getProgress(percent)}\r\n    }\r\n\r\n    onCilick(user){\r\n        this.setState({user : user})\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const project = this.props.project;\r\n        if(project.usersList !== undefined){\r\n            tablebody =Array.isArray(project.usersList)?project.usersList.map((row) => { count = count + 1\r\n                return (\r\n                    <tr key={row.id}>\r\n                        <td>{count}</td>\r\n                        <td>{row.name}</td>\r\n                        <td>\r\n                            {row.comment !== undefined ? \r\n                            <p className=\"user-comment\">\r\n                            {row.comment}\r\n                            </p>\r\n                            :\r\n                            <div>Commentariya yo`q</div>\r\n                            }\r\n                        </td>\r\n                        <td>{project.projectCreated}</td>\r\n                        <td>{project.projectFinished}</td>\r\n                        <td style={{maxWidth:'100px'}}>\r\n                            <div className=\"progress\" style={{height:'14px'}}>\r\n                                <div className=\"progress-bar bg-success\" style={{width:`${row.userPercent}%`}}>\r\n                                {row.userPercent}%</div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {row.progresses.length >  0 ? \r\n                            <button className=\"btn btn-danger mr-5 pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#gipProjectModal\"\r\n                            onClick={() => this.onCilick(row)}>Tasdiqlash \r\n                            </button>\r\n                            :\r\n                            <button className=\"btn btn-danger mr-5 pl-3 pr-3 text-light\" data-toggle=\"modal\" data-target=\"#gipProjectModal\"\r\n                                onClick={() => this.onCilick(row)} disabled>Tasdiqlash \r\n                            </button>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }):''\r\n        }\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <p className=\"text-light\">Loyiha nomi : {this.props.project.projectName}</p>\r\n                        <div className=\"progress\" style={{height:'24px'}}>\r\n                            <div className=\"progress-bar bg-warning\" style={{width:`${this.props.project.projectPercent}%`}}>\r\n                            {this.props.project.projectPercent}%</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>N<sup className=\"mb-1 pt-1\">o</sup><i className=\"tartib-raqam\">-</i></th>\r\n                            <th>Bajaruvchilar</th>\r\n                            <th>Izohlar</th>\r\n                            <th >Boshlanish vaqti</th>\r\n                            <th>Tugash vaqti</th>\r\n                            <th>Progrees bar </th>\r\n                            <th>O'zgarishlar</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tablebody}\r\n                        </tbody>\r\n                    </table>\r\n                    <GipProjectModal user = {this.state.user}/>\r\n                </div>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserPanel.propTypes = {\r\n    getProgress : PropTypes.func.isRequired,\r\n    project : PropTypes.object.isRequired,\r\n    token : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    project : state.ProgressReducer.projectProgress,\r\n    token : state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToPorps, { getProgress}) (UserPanel)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {getProjectusername} from '../../actions/ProjectActions'\r\n\r\nexport class Users extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'gip'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        this.props.getProjectusername(this.props.token.username)}\r\n    }\r\n\r\n    \r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const projects = this.props.projects;\r\n        if(projects !== {}){\r\n            tablebody =Array.isArray(projects)?projects.map((row) => { count = count + 1\r\n                return (\r\n                    <Link to={`/gip-project-manager/${row.id}`} className=\"row project-link\" key={row.id}>\r\n                        <div className=\"col\">{count}</div>\r\n                        <div className=\"col\">{row.projectName}</div>\r\n                        <div className=\"col\">{row.projectCreated}</div>\r\n                        <div className=\"col\">{row.projectFinished}</div>\r\n                    </Link>\r\n                );\r\n            }):''\r\n        }\r\n        \r\n        return ( \r\n            \r\n\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <h3 className=\"text-light\">Projects </h3>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row bg-light p-4\">\r\n                    <div className=\"col\">\r\n                        {tablebody}\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    token : PropTypes.object.isRequired,\r\n    projects : PropTypes.array.isRequired,\r\n    getProjectusername : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    token : state.auth.token,\r\n    projects : state.ProjectReducer.projects\r\n})\r\nexport default connect(mapStateToPorps, { getProjectusername})  (Users)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {getAllProject} from '../../actions/ProjectActions'\r\n\r\nexport class Users extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'admin'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        this.props.getAllProject(this.props.token.username)}\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const projects = this.props.projects;\r\n        if(projects !== {}){\r\n            tablebody =Array.isArray(projects)?projects.map((row) => { count = count + 1\r\n                return (\r\n                    <Link to={`/gip-project-director/${row.id}`} className=\"row project-link\" key={row.id}>\r\n                        <div className=\"col\">{count}</div>\r\n                        <div className=\"col\">{row.projectName}</div>\r\n                        <div className=\"col\">{row.projectCreated}</div>\r\n                        <div className=\"col\">{row.projectFinished}</div>\r\n                        <div className=\"col\">\r\n                            <div className=\"progress\" style={{height:'14px'}}>\r\n                                <div className={row.projectStatus === 'inProgress' ? 'progress-bar bg-success' : \"progress-bar bg-success\"} style={{width:`${row.projectPercent}%`}}>\r\n                                {row.projectPercent}%</div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                );\r\n            }):''\r\n        }\r\n        \r\n        return ( \r\n            \r\n\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <h3 className=\"text-light\">Projects </h3>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row bg-light p-4\">\r\n                    <div className=\"col\">\r\n                        {tablebody}\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    token : PropTypes.object.isRequired,\r\n    projects : PropTypes.array.isRequired,\r\n    getAllProject : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    token : state.auth.token,\r\n    projects : state.ProjectReducer.projects\r\n})\r\nexport default connect(mapStateToPorps, { getAllProject})  (Users)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProgress} from '../../actions/ProgreesActions'\r\n\r\nexport class UserPanel extends Component {\r\n    constructor() {\r\n        super();  \r\n        this.state = {\r\n            user : {}\r\n        }\r\n        this.onCilick = this.onCilick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.token.role[0].roleName !== 'admin'){\r\n            this.props.history.push(\"/\")\r\n        }else{\r\n        const id = this.props.match.params.id;\r\n        const percent = {\r\n            projectId : id\r\n        }\r\n        this.props.getProgress(percent)}\r\n    }\r\n\r\n    onCilick(user){\r\n        this.setState({user : user})\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        let tablebody;\r\n        const project = this.props.project;\r\n        if(project.usersList !== undefined){\r\n            tablebody =Array.isArray(project.usersList)?project.usersList.map((row) => { count = count + 1\r\n                return (\r\n                    <tr key={row.id}>\r\n                        <td>{count}</td>\r\n                        <td>{row.name}</td>\r\n                        <td>\r\n                            {row.comment !== undefined ? \r\n                            <p className=\"user-comment\">\r\n                            {row.comment}\r\n                            </p>\r\n                            :\r\n                            <div>Commentariya yo`q</div>\r\n                            }\r\n                        </td>\r\n                        <td>{project.projectCreated}</td>\r\n                        <td>{project.projectFinished}</td>\r\n                        <td style={{maxWidth:'100px'}}>\r\n                            <div className=\"progress\" style={{height:'14px'}}>\r\n                                <div className=\"progress-bar bg-success\" style={{width:`${row.userPercent}%`}}>\r\n                                {row.userPercent}%</div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }):''\r\n        }\r\n        return (\r\n            <div className=\"container-fuild\">\r\n                <div className=\"row user-navbar\">\r\n                    <div className=\"col m-3\">\r\n                        <p className=\"text-light\">Loyiha nomi : {this.props.project.projectName}</p>\r\n                        <div className=\"progress\" style={{height:'24px'}}>\r\n                            <div className=\"progress-bar bg-warning\" style={{width:`${this.props.project.projectPercent}%`}}>\r\n                            {this.props.project.projectPercent}%</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>N<sup className=\"mb-1 pt-1\">o</sup><i className=\"tartib-raqam\">-</i></th>\r\n                            <th>Bajaruvchilar</th>\r\n                            <th>Izohlar</th>\r\n                            <th >Boshlanish vaqti</th>\r\n                            <th>Tugash vaqti</th>\r\n                            <th>Progrees bar </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tablebody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserPanel.propTypes = {\r\n    getProgress : PropTypes.func.isRequired,\r\n    project : PropTypes.object.isRequired,\r\n    token : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    project : state.ProgressReducer.projectProgress,\r\n    token : state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToPorps, { getProgress}) (UserPanel)","import React, { Component } from 'react';\nimport Login from './components/pages/Login';\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport \"antd/dist/antd.css\";\nimport \"./components/pages/Login.css\";\nimport Register from './components/pages/Register';\nimport Derictor from './components/pages/Derictor';\nimport store from './store';\nimport setJWToken from \"./utils/setJwtToken\";\nimport { GET_TOKEN } from \"./actions/Types\";\nimport jwt_decode from 'jwt-decode';\nimport PrivateRoute from \"./common/PrivateRoute\";\nimport Admin from './components/pages/Admin';\nimport Users from './components/pages/Users';\nimport UserPanel  from './components/pages/UserPanel';\nimport GIPprojectManager from './components/pages/GIPManagerProject';\nimport GIPproject from './components/pages/GIPProject';\nimport AllProject from './components/pages/AllProject';\nimport AdminProject from './components/pages/AdminProject';\n// import {PersistGate} from 'redux-persist/integration/react'\n\nconst token = localStorage.jwtToken;\nif (token) {\n  setJWToken(token);\n  const decoded = jwt_decode(token)\n  store.dispatch({\n    type: GET_TOKEN,\n    payload: decoded,\n  });\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          {/* <PersistGate persistor={persistor}> */}\n            <Route exact path=\"/\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/register\" component={Register} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/derictor\" component={Derictor} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/admin\" component={Admin} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/users\" component={Users} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/project/:id\" component={UserPanel} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/gip-project-manager/:id\" component={GIPprojectManager} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/gipProject\" component={GIPproject} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/allProject\" component={AllProject} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/gip-project-director/:id\" component={AdminProject} />\n            </Switch>\n          {/* </PersistGate> */}\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}